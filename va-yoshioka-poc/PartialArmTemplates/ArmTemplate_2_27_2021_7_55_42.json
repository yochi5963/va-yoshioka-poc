{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "データ ファクトリ名",
			"defaultValue": "va-yoshioka-poc"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pip_ecbeing_create_target_list_2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "バッチ実行結果を参照し先行JOBが当日正常終了していれば処理続行",
				"activities": [
					{
						"name": "GetJobStatus",
						"description": "本日のバッチ実行結果を参照",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "00:01:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT COUNT(*) AS cnt\n  FROM batch_exec_rslt_info beri\n WHERE exec_dt = dbo.get_current_exec_dt()\n   AND odbms_stock_md_in_rslt_cd = '1'\n   AND odbms_stock_gr_in_rslt_cd = '1'\n   AND odbms_stock_gm_in_rslt_cd = '1'\n   AND odbms_arriv_md_in_rslt_cd = '1'\n   AND odbms_arriv_gr_in_rslt_cd = '1'\n   AND odbms_arriv_gm_in_rslt_cd = '1'\n   AND odbms_brakeset_in_rslt_cd = '1'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dst_sql_none",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "CheckJobStatus",
						"description": "本日のバッチ実行結果をチェック",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetJobStatus",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(\n  activity('GetJobStatus').output.firstRow.cnt,\n  1\n)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "marge_error_exec_rslt_info_adf",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "00:01:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[marge_error_exec_rslt_info_adf]",
										"storedProcedureParameters": {
											"vc_error_mode": {
												"value": {
													"value": "@pipeline().parameters.in_error_mode",
													"type": "Expression"
												},
												"type": "String"
											},
											"vc_exec_na": {
												"value": "ecbeing_goods_in_rslt",
												"type": "String"
											},
											"vc_log_text": {
												"value": "他のバッチ処理がまだ完了していません。",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "lnk_stock_sql",
										"type": "LinkedServiceReference"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "next_pipeline",
									"description": "後続処理呼出",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pip_ecbeing_create_target_list_3_BULK",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"in_error_mode": {
												"value": "@pipeline().parameters.in_error_mode",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"in_error_mode": {
						"type": "string"
					}
				},
				"folder": {
					"name": "stock"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pip_ecbeing_create_target_list_3_BULK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pip_ecbeing_create_target_list_3_BULK')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "CSVファイルを新規の一時テーブルに読み込みストアド呼び出し",
				"activities": [
					{
						"name": "ExistsFile",
						"description": "CSVファイルの到着待ち",
						"type": "Validation",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "src_ecbeing_create_target_list",
								"type": "DatasetReference"
							},
							"timeout": "00:01:00",
							"sleep": 10
						}
					},
					{
						"name": "marge_error_exec_rslt_info_adf",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ExistsFile",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "00:01:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[marge_error_exec_rslt_info_adf]",
							"storedProcedureParameters": {
								"vc_error_mode": {
									"value": {
										"value": "@pipeline().parameters.in_error_mode",
										"type": "Expression"
									},
									"type": "String"
								},
								"vc_exec_na": {
									"value": "ecbeing_goods_in_rslt",
									"type": "String"
								},
								"vc_log_text": {
									"value": "CSVファイルが存在しません。",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lnk_stock_sql",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "next_dummy",
						"description": "処理終了",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "DeleteCsv",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "00:01:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[insert_normal_exec_log]",
							"storedProcedureParameters": {
								"vc_exec_na": {
									"value": "ecbeing_goods_in_rslt",
									"type": "String"
								},
								"vc_log_text": {
									"value": {
										"value": "@concat('次処理呼出3 para=', pipeline().parameters.in_error_mode)",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lnk_stock_sql",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "UnzipCsv",
						"description": "Zipファイルを解凍",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ExistsFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "01:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings"
									}
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "src_ecbeing_create_target_list",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "src_ecbeing_create_target_list_unzip",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "BulkCsv2Tmp",
						"description": "CSVファイルを一時テーブルにBulkInsert",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "UnzipCsv",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "TRUNCATE TABLE ecbeing_goods_tmp;\nBULK INSERT ecbeing_goods_tmp\nFROM 'appdata/ftpdata/ecbeing/in/goods/ecbeing_goods.csv'\nWITH (\n    DATA_SOURCE            = 'MyAzureBlobStorage',\n    FORMATFILE_DATA_SOURCE = 'MyAzureBlobStorage',\n    FORMATFILE             = 'appdata/format/ecbeing_goods.xml');  \nSELECT @@ROWCOUNT as count, CURRENT_TIMESTAMP as updt_dt;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dst_sql_none",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "DeleteCsv",
						"description": "CSVファイル削除",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "BulkCsv2Tmp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "src_ecbeing_create_target_list_unzip",
								"type": "DatasetReference"
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"parameters": {
					"in_error_mode": {
						"type": "string"
					}
				},
				"folder": {
					"name": "stock"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/src_ecbeing_create_target_list_unzip')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pip_threshold_info')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ImportCsv",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "00:05:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings"
									}
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table threshold_info;",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"type": "String",
											"ordinal": 1
										},
										"sink": {
											"name": "company_cd",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 2
										},
										"sink": {
											"name": "store_cd",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 3
										},
										"sink": {
											"name": "store_nm",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 4
										},
										"sink": {
											"name": "dept_cd",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 5
										},
										"sink": {
											"name": "category_cd",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 6
										},
										"sink": {
											"name": "sub_category_cd",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 7
										},
										"sink": {
											"name": "threshold_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 8
										},
										"sink": {
											"name": "threshold_num",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 9
										},
										"sink": {
											"name": "remarks",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 10
										},
										"sink": {
											"name": "jan_cd",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 11
										},
										"sink": {
											"name": "threshold_cd",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 12
										},
										"sink": {
											"name": "min_coeffecient",
											"type": "Double",
											"physicalType": "float"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "src_threshold_info",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "snk_threshold_info",
								"type": "DatasetReference"
							}
						]
					}
				],
				"concurrency": 1,
				"folder": {
					"name": "stock"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dst_ecbeing_goods_tmp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lnk_stock_sql",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "stock"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "company_cd",
						"type": "nvarchar"
					},
					{
						"name": "shop_cd",
						"type": "nvarchar"
					},
					{
						"name": "dept_cd",
						"type": "nvarchar"
					},
					{
						"name": "category_cd",
						"type": "nvarchar"
					},
					{
						"name": "sub_category_cd",
						"type": "nvarchar"
					},
					{
						"name": "jan_cd",
						"type": "nvarchar"
					},
					{
						"name": "sales_promotion_cd",
						"type": "nchar"
					},
					{
						"name": "disp_status_cd",
						"type": "nchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ecbeing_goods_tmp"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/src_ecbeing_create_target_list_unzip')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "test01_link_blob",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "stock"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ecbeing_goods.csv",
						"folderPath": "appdata/ftpdata/ecbeing/in/goods",
						"container": "vstockpoc"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pip_ecbeing_create_target_list_3_COPY')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "CSVファイルを新規の一時テーブルに読み込みストアド呼び出し",
				"activities": [
					{
						"name": "ExistsFile",
						"description": "CSVファイルの到着待ち",
						"type": "Validation",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "src_ecbeing_create_target_list",
								"type": "DatasetReference"
							},
							"timeout": "00:01:00",
							"sleep": 10
						}
					},
					{
						"name": "marge_error_exec_rslt_info_adf",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ExistsFile",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "00:01:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[marge_error_exec_rslt_info_adf]",
							"storedProcedureParameters": {
								"vc_error_mode": {
									"value": {
										"value": "@pipeline().parameters.in_error_mode",
										"type": "Expression"
									},
									"type": "String"
								},
								"vc_exec_na": {
									"value": "ecbeing_goods_in_rslt",
									"type": "String"
								},
								"vc_log_text": {
									"value": "CSVファイルが存在しません。",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lnk_stock_sql",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "next_dummy",
						"description": "処理終了",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "MergeTmp2Info",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "00:01:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[insert_normal_exec_log]",
							"storedProcedureParameters": {
								"vc_exec_na": {
									"value": "ecbeing_goods_in_rslt",
									"type": "String"
								},
								"vc_log_text": {
									"value": {
										"value": "@concat('次処理呼出3 para=', pipeline().parameters.in_error_mode)",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lnk_stock_sql",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ImportCsv2Tmp",
						"description": "CSVファイルを一時テーブルにインポート",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ExistsFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "01:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings"
									}
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE ecbeing_goods_info;\nTRUNCATE TABLE ecbeing_goods_tmp;\n",
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"type": "String",
											"ordinal": 1
										},
										"sink": {
											"name": "company_cd",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 2
										},
										"sink": {
											"name": "shop_cd",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 3
										},
										"sink": {
											"name": "dept_cd",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 4
										},
										"sink": {
											"name": "category_cd",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 5
										},
										"sink": {
											"name": "sub_category_cd",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 6
										},
										"sink": {
											"name": "jan_cd",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 7
										},
										"sink": {
											"name": "sales_promotion_cd",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 8
										},
										"sink": {
											"name": "disp_status_cd",
											"type": "String",
											"physicalType": "nchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "src_ecbeing_create_target_list",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "dst_ecbeing_goods_tmp",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "MergeTmp2Info",
						"description": "一時テーブルを本テーブルにマージ（重複行を除く）",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ImportCsv2Tmp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "MERGE ecbeing_goods_info AS inf\nUSING ecbeing_goods_tmp  AS tmp\n   ON tmp.shop_cd = inf.shop_cd\n  AND tmp.jan_cd  = inf.jan_cd\nWHEN NOT MATCHED THEN\n    INSERT (company_cd,\n            shop_cd,\n            dept_cd,\n            category_cd,\n            sub_category_cd,\n            jan_cd,\n            sales_promotion_cd,\n            disp_status_cd\n    )\n    VALUES (tmp.company_cd,\n            tmp.shop_cd,\n            tmp.dept_cd,\n            tmp.category_cd,\n            tmp.sub_category_cd,\n            tmp.jan_cd,\n            tmp.sales_promotion_cd,\n            tmp.disp_status_cd\n    );\nSELECT @@ROWCOUNT as count, CURRENT_TIMESTAMP as updt_dt;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dst_sql_none",
								"type": "DatasetReference"
							}
						}
					}
				],
				"parameters": {
					"in_error_mode": {
						"type": "string"
					}
				},
				"folder": {
					"name": "stock"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dst_ecbeing_goods_tmp')]"
			]
		}
	]
}